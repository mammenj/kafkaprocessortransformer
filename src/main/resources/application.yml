spring:
  application:
    name: processor-transformer-sample
  cloud:
    stream:
      bindings:
        processortest-in-0:
          destination: jm-processor-input-topic

        transformertest-in-0:
          destination: jm-processor-input-topic
        transformertest-out-0:
          destination: jm-transfomed-output-topic

        inputwords-in-0:
          destination: jm-word-input-topic
        inputwords-out-0:
          destination: jm-processor-input-topic
        
      function:
        definition: inputwords;processortest;transformertest

      kafka:
        streams:
          binder:
            serdeError: logAndContinue
            state-store-retry:
              max-attempts: 1
            functions:
              inputwords:
                applicationId: myprocessor-inputwords
                configuration:
                  auto.offset.reset: latest
                  isolation.level: read_committed
                  default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                  default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde


              processortest:
                applicationId: myprocessor-processor
                configuration:
                  auto.offset.reset: latest
                  isolation.level: read_committed
                  default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                  default.value.serde: org.apache.kafka.common.serialization.Serdes$LongSerde

              transformertest:
                applicationId: mytransformer-transformer
                configuration:
                  auto.offset.reset: latest
                  isolation.level: read_committed
                  default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                  default.value.serde: org.apache.kafka.common.serialization.Serdes$LongSerde


            configuration:
              auto.offset.reset: latest
              isolation.level: read_committed
              
            
server:
  port: 8081
